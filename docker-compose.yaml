services:
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "bash", "-c", "nc -z localhost 9092"]
      interval: 20s
      retries: 10
      timeout: 10s
      start_period: 40s
    networks:
      - app_network

  central_server:
    build:
      context: ./central_server/src/central_server
      dockerfile: Dockerfile
    container_name: central_server
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./central_server/src/central_server:/app
    environment:
      - MONGO_URI=mongodb://root:example@mongo:27017/?authSource=admin
      - KAFKA_BOOTSTRAP_SERVER=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
    command: ["go", "run", "main.go"]
    networks:
      - app_network

  chunk_server_1:
    build:
      context: ./chunk_server/src/chunk_server
      dockerfile: Dockerfile
    container_name: chunk_server_1
    restart: always
    ports:
      - "8081:8080"
    volumes:
      - ./chunk_server/src/chunk_server:/app
    environment:
      - MONGO_URI=mongodb://root:example@mongo:27017/?authSource=admin
      - KAFKA_BOOTSTRAP_SERVER=kafka:9092
      - CHUNK_COORDINATE="0,0"
    depends_on:
      kafka:
        condition: service_healthy
    command: ["go", "run", "main.go"]
    networks:
      - app_network

  chunk_server_2:
    build:
      context: ./chunk_server/src/chunk_server
      dockerfile: Dockerfile
    container_name: chunk_server_2
    restart: always
    ports:
      - "8082:8080"
    volumes:
      - ./chunk_server/src/chunk_server:/app
    environment:
      - MONGO_URI=mongodb://root:example@mongo:27017/?authSource=admin
      - KAFKA_BOOTSTRAP_SERVER=kafka:9092
      - CHUNK_COORDINATE="0,1"
    depends_on:
      kafka:
        condition: service_healthy
    command: ["go", "run", "main.go"]
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mongo_data:
    driver: local
  kafka_data:
    driver: local